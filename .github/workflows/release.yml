name: Release

on:
  push:
    branch:
      - "release/[0-9]+.[0-9]+"
      - "release/[0-9]+.[0-9]+.[0-9]+"
      - "release/[0-9]+.[0-9]+.[0-9]+.[0-9]+"
      - "release/[0-9]+.[0-9]+.[0-9]+.[0-9]+"
      - "release/[0-9]+.[0-9]+.[0-9]+.[0-9]+post[0-9]+"
      - "release/[0-9]+.[0-9]+.[0-9]+.[0-9]+rc[0-9]+"
      - "release/[0-9]+.[0-9]+.[0-9]+.[0-9]+a[0-9]+"
      - "release/[0-9]+.[0-9]+.[0-9]+.[0-9]+b[0-9]+"

jobs:
  build-sdist:
    runs-on: ubuntu-latest

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v3
      with:
        cache: 'pip'

    - name: Build source distribution
      run: |
        python setup.py sdist
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*.tar.*

  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    defaults:
      run:
        shell: bash

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.6.0

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.6.0

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: ./wheelhouse/*.whl

  publish:
    environment: Environment
    needs: [build-sdist, build-wheels]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist/

    - name: Extract Release Version
      id: relver
      run: |
        ls -al dist/
        set -e
        echo ::set-output name=version::$(python -c 'exec(open("shmutils/about.py").read());print(__version__)')

    - name: Publish Github Release
      uses: elprans/gh-action-create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.relver.outputs.version }}
        release_name: v${{ steps.relver.outputs.version }}
        target: ${{ github.event.pull_request.base.ref }}
        body: ${{ github.event.pull_request.body }}
        draft: false

    - run: |
        ls -al dist/
    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.RELEASE_USER_PYPI_TOKEN }}
